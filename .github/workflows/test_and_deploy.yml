name: tests

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  pull_request:

jobs:
  linting:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        python-version: ["3.10" ]
    steps:
      - uses: neuroinformatics-unit/actions/lint@main

  manifest:
    name: Check Manifest
    runs-on: ubuntu-latest
    steps:
      - uses: neuroinformatics-unit/actions/check_manifest@main

  test:
    needs: [linting, manifest]
    name: ${{ matrix.os }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash -l {0}

    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          auto-update-conda: true
          channels: conda-forge
          activate-environment: "true"
      - name: Install RClone
        run: |
          conda activate true
          conda install -c conda-forge rclone
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
      - name: Test
        run: pytest

#      - name: Coveralls
#        env:
#            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}from datashuttle.datashuttle import DataShuttle
#        run: |
#            pip install coveralls
#            coveralls --service=github
#  deploy:
#    needs: test
#    runs-on: ubuntu-latest
#    if: contains(github.ref, 'tags')
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Python
#        uses: actions/setup-python@v1
#        with:
#          python-version: "3.x"
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -U build twine
#      - name: Build and publish
#        env:
#          TWINE_USERNAME: __token__
#          TWINE_PASSWORD: ${{ secrets.TWINE_API_KEY }}
#        run: |
#          python -m build
 #         twine upload dist/*


#        exclude:
#          - os: windows-latest
#            python-version: 3.9
#          - os: macos-latest
#            python-version: 3.7
#          - os: macos-latest
#            python-version: 3.8
#          - os: macos-latest
#            python-version: 3.9
#          - os: windows-latest
#            python-version: 3.7
#          - os: windows-latest
#            python-version: 3.8

#      - name: Set up Python
 #       uses: actions/setup-python@v2
  #      with:
   #       python-version: ${{ matrix.python-version }}
